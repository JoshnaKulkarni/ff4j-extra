class QueryBuilder
!!!160740.java!!!	createTaskQueryOverQueue(in queueName : String) : TaskQuery
        if (queueName == null) {
            throw new IllegalArgumentException("Queue name cannot be null");
        }
        return new TaskQuery(queueName);
!!!160868.java!!!	createPageableTaskQueryOverQueue(in queueName : String, in pageSize : int, in pageNumber : int) : TaskQuery
        TaskQuery query = createTaskQueryOverQueue(queueName);
        query.setPageable(true);
        query.setPagesize(pageSize);
        query.setPagenumber(pageNumber);
        return query;
!!!160996.java!!!	defineFilter(in query : TaskQuery, in filterExpression : String, in  : Object...filterArguments) : TaskQuery
        if (query == null) {
            throw new IllegalArgumentException("Query must not be null");
        }
        if (filterExpression == null || "".equals(filterExpression)) {
            throw new IllegalArgumentException("You must define filterExpression,"
                    + "please not use 'defineFilter' is not mandatory.");
        }
        query.setQueryExpression(filterExpression);
        query.setQueryParameters(filterArguments);
        return query;
!!!161124.java!!!	defineSortCriteria(in query : TaskQuery, in  : SortCriterion...fieldNames) : TaskQuery
        if (query == null) {
            throw new IllegalArgumentException("Query must not be null");
        }
        if (fieldNames == null || fieldNames.length == 0) {
            throw new IllegalArgumentException("You should insert criteria or not used 'defineSortCriteria' ops");
        }
        if (fieldNames != null && fieldNames.length > 0) {
            query.setSortCriteria(new ArrayList < SortCriterion >(Arrays.asList(fieldNames)));
        }
        return query;
