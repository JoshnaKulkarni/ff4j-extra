<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.3.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd" >


	<!-- SPRING SECURITY -->
	<http auto-config="true">
		<intercept-url pattern="/*.htm" 		access="ROLE_USER" />
		<intercept-url pattern="/ff4j-console*" access="ROLE_USER" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="guest" password="guest" authorities="ROLE_USER, BETA, ADMIN, USER, FF4JDEV" />
				<user name="admin" password="admin" authorities="ROLE_USER, BETA, ADMIN, USER, FF4JDEV" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	
	<!-- Feature Store -->
	<beans:bean id="ff4j.store" class="org.ff4j.store.InMemoryFeatureStore" >
		<beans:property name="location" value="ff4j.xml" />
	</beans:bean>
	
	<!-- ff4j Main Class -->
	<beans:bean id="ff4j" class="org.ff4j.FF4j" >
		<beans:property name="store" ref="ff4j.store" />
		<beans:property name="authorizationsManager" >
			<beans:bean class="org.ff4j.security.SpringSecurityAuthorisationManager" />
		</beans:property>
	</beans:bean>
	
	<!-- Inject Spring Bean into TAG (could use webApplicationContext if SPring  -->
	<beans:bean id="ctxHolder" class="org.ff4j.web.FF4jWebContextHolder">
		<beans:property name="ff4j" ref="ff4j" />
	</beans:bean>
	
	<!-- JMX -->
	
	<!-- this bean must not be lazily initialized if the exporting is to happen -->
	<beans:bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
		<beans:property name="assembler" ref="assembler" />
		<beans:property name="namingStrategy" ref="namingStrategy" />
		<beans:property name="autodetect" value="true" />
	</beans:bean>

	<beans:bean id="jmxAttributeSource" class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />

	<!-- will create management interface using annotation metadata -->
	<beans:bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
		<beans:property name="attributeSource" ref="jmxAttributeSource" />
	</beans:bean>

	<!-- will pick up the ObjectName from the annotation -->
	<beans:bean id="namingStrategy" class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
		<beans:property name="attributeSource" ref="jmxAttributeSource" />
	</beans:bean>
	
	<beans:bean id="ff4j.webservices" class="org.ff4j.web.services.FeatureWebService" >
		<beans:property name="store" ref="ff4j.store" />
	</beans:bean>
	
	<beans:bean id="mapper1" class="org.ff4j.web.services.exception.FeatureAlreadyExistExceptionMapper" scope="singleton" />
	<beans:bean id="mapper2" class="org.ff4j.web.services.exception.FeatureNotFoundExceptionMapper" 	scope="singleton" />
	<beans:bean id="mapper3" class="org.ff4j.web.services.exception.RuntimeExceptionMapper" 			scope="singleton" />
	
	<context:component-scan base-package="org.ff4j.jmx" />
	
</beans:beans>